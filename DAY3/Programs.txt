1. Do the below programs in anonymous function & IIFE
  a. Print odd numbers in an array

const numbers = [8, 19, 5, 6, 14, 9, 13];const odds = numbers.filter((num) => num % 2 === 1);
console.log(odds); // [19, 5 , 9, 13]

  b. Convert all the strings to title caps in a string array

function convertToTitleCase(str) {
    if (!str) {
        return ""
    }

    return str.toLowerCase().split(' ').map(function(word) {
        return word.charAt(0).toUpperCase().concat(word.substr(1));
    }).join(' ');
}

console.log(convertToTitleCase('Convert aLL the STRINGD to TITAL caps in a string aRREY'));

  c. Sum of all numbers in an array

let Nums = [1, 2, 3, 4, 5];

let sum = 0;

for (let i = 0; i < Nums.length; i++ ) {
  sum += Nums[i];
}

console.log(sum) // 15

  d. Return all the prime numbers in an array

 arr = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25];

const isPrime = n => {
    if (n === 1) {
        return false;
    } else if (n === 2) {
        return true;
    } else {
        for (let x = 2; x < n; x++) {
            if (n % x === 0) {
                return false;
            }
        }
        return true;
    };
};
const filterPrime = arr => {
    const filtered = arr.filter(el => !isPrime(el));
    return filtered;
};
console.log(filterPrime(arr));//[4,6,8,9,10,12,14,15,16,18,20,21,22,24,25]

  e. Return all the palindromes in an array

const arr = ['DAD','MOM', 1344, 12321, 'did', 'cannot'];
const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = arr => {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));//["DAD","MOM",12321,did]

  f. Return median of two sorted arrays of the same size.

let a=[-5,-4,-3,-2,-1,0];
let b=[1,2,3,4,5,6];

let length=a.length+b.length;
let merge=a.concat(b);
merge.sort((a,b)=>{
    return a - b;
});
let res;
if(length%2===0){
    let mid=length/2;
     res=merge[mid]+merge[mid-1];
     res/=2
}
else{
    res=merge[Math.floor(length/2)];
}
console.log(merge,res);//[-5, -4, -3, -2, -1,0,  1,  2,  3,  4, 5,  6] 0.5

  g. Remove duplicates from an array

const array = [1, 2, 3, 4, 1, 2, 3];
const uniqueArray = [...new Set(array)];
console.log(uniqueArray); // [1, 2, 3, 4]

  h. Rotate an array by k times

let arr=[1,2,3,4,5,6,7];
let right=[...arr];
let left=[...arr];
let k=3;
for(let i=0;i<k;i++){
    let first= left.shift();
    let last=right.pop();
    right=[last,...right]
    left=[...left,first]
}
console.log(right,left);//[5, 6, 7, 1, 2, 3, 4] [4, 5, 6, 7, 1, 2, 3]

